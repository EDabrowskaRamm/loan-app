{"version":3,"sources":["components/Table/Table.tsx","utils/calculations.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Table","data","map","el","month","initialCapitalBalance","toFixed","paymentOfInterest","creditRepayment","fullInstallment","remainingOutstanding","getRate","loan","getQ","interest","getNumberOfMonths","time","amount","Math","pow","getTableData","dataArr","equity","i","X","asd","thisMonthsInterest","Number","push","App","useState","setLoan","loanType","setLoanType","results","setResults","monthlyRate","setMonthlyRate","useEffect","onSelectLoanType","event","target","name","getCostOfCredit","getAmountOfInterest","className","type","checked","onChange","value","onClick","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.741c34ce.chunk.js","sourcesContent":["import React from 'react';\nimport { ITableData } from '../../models/ITableData'\n\ntype TableProps = { data: ITableData[] }\n\nconst Table = ({ data }: TableProps) => {\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <td>Month</td>\n                    <td>Initial capital balance</td>\n                    <td>Payment of interest</td>\n                    <td>Credit repayment</td>\n                    <td>Full installment</td>\n                    <td>Remaining outstanding</td>\n                </tr>\n            </thead>\n            <tbody>\n                {data.map(el => <tr key={el.month}>\n                    <td>{el.month}</td>\n                    <td>{el.initialCapitalBalance.toFixed(2)}</td>\n                    <td>{el.paymentOfInterest.toFixed(2)}</td>\n                    <td>{el.creditRepayment.toFixed(2)}</td>\n                    <td>{el.fullInstallment.toFixed(2)}</td>\n                    <td>{el.remainingOutstanding.toFixed(2)}</td>\n                </tr>)}\n            </tbody>\n        </table>\n    );\n}\n\nexport default Table;","import { ILoanModel } from '../models/ILoanModel'\nimport { ITableData } from '../models/ITableData'\n\nexport const getRate = (loan: ILoanModel): string => {\n    const getQ = 1 + ((loan.interest / 100) / 12);\n    const getNumberOfMonths = loan.time * 12;\n    const getRate = loan.amount * Math.pow(getQ, getNumberOfMonths) * (getQ - 1) / (Math.pow(getQ, getNumberOfMonths) - 1);\n    return getRate.toFixed(2);\n}\n\nexport const getTableData = (loan: ILoanModel): ITableData[] => {\n    const dataArr: ITableData[] = [];\n    let equity: number = 0;\n\n    let data: ITableData = {\n        month: 0,\n        initialCapitalBalance: loan.amount,\n        paymentOfInterest: 0,\n        creditRepayment: 0,\n        fullInstallment: 0,\n        remainingOutstanding: 0\n    }\n\n    for (let i = 0; i < loan.time * 12; i++) {\n        let X: number = loan.amount - equity;\n        let asd: number = X * (loan.interest / 100) * (365 / 12) / 365;\n        const thisMonthsInterest: number = X * (loan.interest / 100 / 12);\n\n        equity += (Number(getRate(loan)) - thisMonthsInterest);\n\n        data = {\n            month: i + 1,\n            initialCapitalBalance: X,\n            paymentOfInterest: asd,\n            creditRepayment: (Number(getRate(loan)) - thisMonthsInterest),\n            fullInstallment: (Number(getRate(loan)) - thisMonthsInterest) + asd,\n            remainingOutstanding: loan.amount - equity\n        }\n        dataArr.push(data);\n    }\n\n    return dataArr;\n}\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { ILoanModel } from '../../models/ILoanModel'\nimport Table from '../Table/Table'\nimport { getRate, getTableData } from '../../utils/calculations'\n\ntype LoanType = \"housing\" | \"car\";\n\nconst App = () => {\n\tconst [loan, setLoan] = useState<ILoanModel>({\n\t\tamount: 0,\n\t\ttime: 0,\n\t\tinterest: 3.5\n\t});\n\tconst [loanType, setLoanType] = useState<LoanType>(\"housing\");\n\tconst [results, setResults] = useState(false);\n\tconst [monthlyRate, setMonthlyRate] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tif (loanType === \"housing\") {\n\t\t\tsetLoan({\n\t\t\t\t...loan,\n\t\t\t\tinterest: 3.5\n\t\t\t});\n\t\t} else {\n\t\t\tsetLoan({\n\t\t\t\t...loan,\n\t\t\t\tinterest: 5\n\t\t\t});\n\t\t}\n\t}, [loanType]);\n\n\tconst onSelectLoanType = (event: React.ChangeEvent) => {\n\t\tconst target = event.target as HTMLInputElement;\n\t\tsetLoanType(target.name as LoanType);\n\t}\n\n\tconst onSetAmount = (event: React.ChangeEvent) => {\n\t\tconst target = event.target as HTMLInputElement;\n\t\tsetLoan({\n\t\t\t...loan,\n\t\t\tamount: Number(target.value)\n\t\t});\n\t}\n\n\tconst onSetTime = (event: React.ChangeEvent) => {\n\t\tconst target = event.target as HTMLInputElement;\n\t\tsetLoan({\n\t\t\t...loan,\n\t\t\ttime: Number(target.value)\n\t\t});\n\t}\n\n\tconst onGetData = (event: React.MouseEvent) => {\n\t\tevent.preventDefault();\n\t\tconst data = getRate(loan);\n\t\tsetResults(true);\n\t\tsetMonthlyRate(data);\n\t}\n\n\tconst getCostOfCredit: number = (loan.time * 12) * Number(monthlyRate);\n\tconst getAmountOfInterest: number = getCostOfCredit - loan.amount;\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<h1>simple loan calculator</h1>\n\t\t\t</header>\n\t\t\t<main>\n\t\t\t\t<div>\n\t\t\t\t\t<label>\n\t\t\t\t\t\thousing loan\n\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tchecked={loanType === \"housing\"}\n\t\t\t\t\t\t\tonChange={onSelectLoanType}\n\t\t\t\t\t\t\tname=\"housing\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tcar loan\n\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tchecked={loanType === \"car\"}\n\t\t\t\t\t\t\tonChange={onSelectLoanType}\n\t\t\t\t\t\t\tname=\"car\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tdesired amount\n\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tvalue={loan.amount}\n\t\t\t\t\t\t\tonChange={onSetAmount}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tpayback time\n\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tvalue={loan.time}\n\t\t\t\t\t\t\tonChange={onSetTime}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span>* in years</span>\n\t\t\t\t\t</label>\n\t\t\t\t\t<button onClick={onGetData}>calculate</button>\n\t\t\t\t</div>\n\t\t\t\t{results && <>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tTotal monthly rate &nbsp;\n\t\t\t\t\t\t\t<span>{monthlyRate}</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tFull cost of credit &nbsp;\n\t\t\t\t\t\t\t<span>{getCostOfCredit.toFixed(2)}</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tAmount of interest &nbsp;\n\t\t\t\t\t\t\t<span>{getAmountOfInterest.toFixed(2)}</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Table data={getTableData(loan)} />\n\t\t\t\t</>}\n\t\t\t</main>\n\t\t\t<footer>\n\t\t\t\t<p>made by EDR</p>\n\t\t\t</footer>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}