{"version":3,"sources":["components/Table/Table.tsx","utils/calculations.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Table","props","className","data","map","el","month","initialCapitalBalance","toFixed","paymentOfInterest","creditRepayment","fullInstallment","remainingOutstanding","getRate","loan","getQ","interest","getNumberOfMonths","time","amount","Math","pow","getTableData","instalmentType","dataArr","equity","i","initial","thisMonthsInterest","Number","push","getDeclinedInstalmentEquity","getDeclinedInstalmentInterestRate","result","getMinMaxDeclinedInstalmentRate","firstEl","shift","lastEl","pop","min","max","App","useState","setLoan","loanType","setLoanType","results","setResults","monthlyRate","setMonthlyRate","setInstalmentType","useEffect","onSelectLoanType","event","target","name","onSelectInstalmentType","getCostOfCredit","getAmountOfInterest","disabledBtn","type","checked","onChange","disabled","value","onClick","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f50c0160.chunk.js","sourcesContent":["import React from 'react';\nimport './Table.css';\n\nimport { ITableData } from '../../models/ITableData'\n\ninterface IProps { data: ITableData[] }\n\nconst Table = (props: IProps) => (\n    <table className=\"Table\">\n        <thead>\n            <tr>\n                <td>Month</td>\n                <td>Initial capital balance</td>\n                <td>Payment of interest</td>\n                <td>Credit repayment</td>\n                <td>Full installment</td>\n                <td>Remaining outstanding</td>\n            </tr>\n        </thead>\n        <tbody>\n            {props.data.map(el => <tr key={el.month}>\n                <td>{el.month}</td>\n                <td>{el.initialCapitalBalance.toFixed(2)}</td>\n                <td>{el.paymentOfInterest.toFixed(2)}</td>\n                <td>{el.creditRepayment.toFixed(2)}</td>\n                <td>{el.fullInstallment.toFixed(2)}</td>\n                <td>{el.remainingOutstanding.toFixed(2)}</td>\n            </tr>)}\n        </tbody>\n    </table>\n);\n\nexport default Table;","import { ILoanModel } from '../models/ILoanModel'\nimport { ITableData } from '../models/ITableData'\nimport { InstalmentType } from '../components/App/App'\n\nexport const getRate = (loan: ILoanModel): string => {\n    const getQ = 1 + ((loan.interest / 100) / 12);\n    const getNumberOfMonths = loan.time * 12;\n    const getRate = loan.amount * Math.pow(getQ, getNumberOfMonths) * (getQ - 1) / (Math.pow(getQ, getNumberOfMonths) - 1);\n    return getRate.toFixed(2);\n}\n\nexport const getTableData = (loan: ILoanModel, instalmentType: InstalmentType): ITableData[] => {\n    const dataArr: ITableData[] = [];\n    let data: ITableData = {\n        month: 0,\n        initialCapitalBalance: loan.amount,\n        paymentOfInterest: 0,\n        creditRepayment: 0,\n        fullInstallment: 0,\n        remainingOutstanding: 0\n    }\n\n    if (instalmentType === \"fixed\") {\n        let equity: number = 0;\n\n        for (let i = 0; i < loan.time * 12; i++) {\n            const initial: number = loan.amount - equity;\n            const interest: number = initial * (loan.interest / 100) * (365 / 12) / 365;\n            const thisMonthsInterest: number = initial * (loan.interest / 100 / 12);\n\n            equity += (Number(getRate(loan)) - thisMonthsInterest);\n\n            data = {\n                month: i + 1,\n                initialCapitalBalance: initial,\n                paymentOfInterest: interest,\n                creditRepayment: (Number(getRate(loan)) - thisMonthsInterest),\n                fullInstallment: (Number(getRate(loan)) - thisMonthsInterest) + interest,\n                remainingOutstanding: loan.amount - equity\n            }\n            dataArr.push(data);\n        }\n    } else {\n        let equity: number = loan.amount;\n\n        for (let i = 0; i < loan.time * 12; i++) {\n            const interest: number = ((loan.amount - (i * getDeclinedInstalmentEquity(loan))) * (loan.interest / 100)) / 12;\n            const initial: number = equity;\n\n            equity -= getDeclinedInstalmentEquity(loan);\n\n            data = {\n                month: i + 1,\n                initialCapitalBalance: initial,\n                paymentOfInterest: interest,\n                creditRepayment: getDeclinedInstalmentEquity(loan),\n                fullInstallment: getDeclinedInstalmentEquity(loan) + interest,\n                remainingOutstanding: equity\n            }\n            dataArr.push(data);\n        }\n    }\n\n    return dataArr;\n}\n\n\nconst getDeclinedInstalmentEquity = (loan: ILoanModel): number => {\n    return loan.amount / (loan.time * 12);\n}\n\nexport const getDeclinedInstalmentInterestRate = (loan: ILoanModel): number => {\n    let result: number = 0;\n\n    for (let i = 0; i < loan.time * 12; i++) {\n        result += ((loan.amount - (i * getDeclinedInstalmentEquity(loan))) * (loan.interest / 100)) / 12;\n    }\n\n    return result;\n}\n\nexport const getMinMaxDeclinedInstalmentRate = (loan: ILoanModel) => {\n    const data: ITableData[] = getTableData(loan, \"declining\");\n    const firstEl = data.shift();\n    const lastEl = data.pop();\n\n    return {\n        min: lastEl ? lastEl.fullInstallment : 0,\n        max: firstEl ? firstEl.fullInstallment : 0\n    }\n}","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport { ILoanModel } from '../../models/ILoanModel'\nimport Table from '../Table/Table'\nimport { getRate, getTableData, getDeclinedInstalmentInterestRate, getMinMaxDeclinedInstalmentRate } from '../../utils/calculations'\n\ntype LoanType = \"housing\" | \"car\";\nexport type InstalmentType = \"declining\" | \"fixed\";\n\nconst App = () => {\n\tconst [loan, setLoan] = useState<ILoanModel>({\n\t\tamount: 0,\n\t\ttime: 0,\n\t\tinterest: 3.5\n\t});\n\tconst [loanType, setLoanType] = useState<LoanType>(\"housing\");\n\tconst [results, setResults] = useState(false);\n\tconst [monthlyRate, setMonthlyRate] = useState(\"\");\n\tconst [instalmentType, setInstalmentType] = useState<InstalmentType>(\"fixed\");\n\n\tuseEffect(() => {\n\t\tif (loanType === \"housing\") {\n\t\t\tsetLoan({\n\t\t\t\t...loan,\n\t\t\t\tinterest: 3.5\n\t\t\t});\n\t\t} else {\n\t\t\tsetLoan({\n\t\t\t\t...loan,\n\t\t\t\tinterest: 5\n\t\t\t});\n\t\t}\n\t}, [loanType]);\n\n\tconst onSelectLoanType = (event: React.ChangeEvent) => {\n\t\tconst target = event.target as HTMLInputElement;\n\t\tsetLoanType(target.name as LoanType);\n\t}\n\n\tconst onSetAmount = (event: React.ChangeEvent) => {\n\t\tconst target = event.target as HTMLInputElement;\n\t\tsetLoan({\n\t\t\t...loan,\n\t\t\tamount: Number(target.value)\n\t\t});\n\t}\n\n\tconst onSetTime = (event: React.ChangeEvent) => {\n\t\tconst target = event.target as HTMLInputElement;\n\t\tsetLoan({\n\t\t\t...loan,\n\t\t\ttime: Number(target.value)\n\t\t});\n\t}\n\n\tconst onSelectInstalmentType = (event: React.ChangeEvent) => {\n\t\tconst target = event.target as HTMLInputElement;\n\t\tsetInstalmentType(target.name as InstalmentType);\n\t}\n\n\tconst onGetData = (event: React.MouseEvent) => {\n\t\tevent.preventDefault();\n\t\tif (instalmentType === \"fixed\") {\n\t\t\tconst data = getRate(loan);\n\t\t\tsetMonthlyRate(data);\n\t\t} else {\n\n\t\t}\n\t\tsetResults(true);\n\t}\n\n\tconst onResetData = () => {\n\t\tsetLoan({\n\t\t\tamount: 0,\n\t\t\ttime: 0,\n\t\t\tinterest: 3.5\n\t\t});\n\t\tsetResults(false);\n\t}\n\n\tconst getCostOfCredit: number = (loan.time * 12) * Number(monthlyRate);\n\tconst getAmountOfInterest: number = getCostOfCredit - loan.amount;\n\tconst disabledBtn: boolean = loan.amount <= 0 || loan.time <= 0;\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App__header\">\n\t\t\t\t<h1>simple loan calculator</h1>\n\t\t\t</header>\n\t\t\t<main className=\"App__main\">\n\t\t\t\t<form className=\"App__form\">\n\t\t\t\t\t<div className=\"App__radio-wrapper\">\n\t\t\t\t\t\t<label className=\"App__radio\">\n\t\t\t\t\t\t\tHousing loan\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tchecked={loanType === \"housing\"}\n\t\t\t\t\t\t\t\tonChange={onSelectLoanType}\n\t\t\t\t\t\t\t\tname=\"housing\"\n\t\t\t\t\t\t\t\tdisabled={results}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label className=\"App__radio\">\n\t\t\t\t\t\t\tCar loan\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tchecked={loanType === \"car\"}\n\t\t\t\t\t\t\t\tonChange={onSelectLoanType}\n\t\t\t\t\t\t\t\tname=\"car\"\n\t\t\t\t\t\t\t\tdisabled={results}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"App__input-wrapper\">\n\t\t\t\t\t\t<label className=\"App__input\">\n\t\t\t\t\t\t\tDesired amount:\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tvalue={loan.amount}\n\t\t\t\t\t\t\t\tonChange={onSetAmount}\n\t\t\t\t\t\t\t\tclassName=\"App__input-box\"\n\t\t\t\t\t\t\t\tdisabled={results}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label className=\"App__input\">\n\t\t\t\t\t\t\tPayback time (in years):\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tvalue={loan.time}\n\t\t\t\t\t\t\t\tonChange={onSetTime}\n\t\t\t\t\t\t\t\tclassName=\"App__input-box\"\n\t\t\t\t\t\t\t\tdisabled={results}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"App__radio-wrapper\">\n\t\t\t\t\t\t<label className=\"App__radio\">\n\t\t\t\t\t\t\tDeclining instalments\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tchecked={instalmentType === \"declining\"}\n\t\t\t\t\t\t\t\tonChange={onSelectInstalmentType}\n\t\t\t\t\t\t\t\tname=\"declining\"\n\t\t\t\t\t\t\t\tdisabled={results}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label className=\"App__radio\">\n\t\t\t\t\t\t\tFixed instalments\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tchecked={instalmentType === \"fixed\"}\n\t\t\t\t\t\t\t\tonChange={onSelectInstalmentType}\n\t\t\t\t\t\t\t\tname=\"fixed\"\n\t\t\t\t\t\t\t\tdisabled={results}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tonClick={onGetData}\n\t\t\t\t\t\tdisabled={disabledBtn}\n\t\t\t\t\t\tclassName=\"App__btn\"\n\t\t\t\t\t>\n\t\t\t\t\t\tcalculate\n\t\t\t\t\t</button>\n\t\t\t\t\t{results && <button type=\"button\" onClick={onResetData} className=\"App__btn\">\n\t\t\t\t\t\treset\n\t\t\t\t\t</button>}\n\t\t\t\t</form>\n\t\t\t\t{results && <>\n\t\t\t\t\t{instalmentType === \"fixed\"\n\t\t\t\t\t\t? <div>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tTotal monthly rate: &nbsp;\n\t\t\t\t\t\t\t<span>{monthlyRate}</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tFull cost of credit: &nbsp;\n\t\t\t\t\t\t\t<span>{getCostOfCredit.toFixed(2)}</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tAmount of interest: &nbsp;\n\t\t\t\t\t\t\t<span>{getAmountOfInterest.toFixed(2)}</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t: <div>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tAmount of the first instalment: &nbsp;\n\t\t\t\t\t\t\t<span>{getMinMaxDeclinedInstalmentRate(loan).max.toFixed(2)}</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tAmount of the last instalment: &nbsp;\n\t\t\t\t\t\t\t<span>{getMinMaxDeclinedInstalmentRate(loan).min.toFixed(2)}</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tInterest sum: &nbsp;\n\t\t\t\t\t\t\t<span>{getDeclinedInstalmentInterestRate(loan).toFixed(2)}</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<Table data={getTableData(loan, instalmentType)} />\n\t\t\t\t</>}\n\t\t\t</main>\n\t\t\t<footer className=\"App__footer\">\n\t\t\t\t<p>made by EDR</p>\n\t\t\t</footer>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}